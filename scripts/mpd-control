#!/bin/fish
# Script to control mpd

function check_toggle
	set -l check (mpc | grep "\[" | awk '{print $1}')
	if [ $check = "[playing]" ]
		dunstify --urgency=normal --icon=player_play --replace=14062003 "MPD Control" "Music Playing !"
	else if [ $check = "[paused]" ]
		dunstify --urgency=normal --icon=player_pause --replace=14062003 "MPD Control" "Music Paused !"
	else
		dunstify --urgency=normal --replace=14062003 "MPD Control" "No status found"
	end
end

function volume-up
	set -l volume (mpc | grep volume | awk '{print $2}')
	dunstify --urgency=normal --icon=audio-volume-high --replace=14062003 "MPD Control" "Volume increased \nCurent Volume: $volume"
end

function volume-down
	set -l volume (mpc | grep volume | awk '{print $2}')
	dunstify --urgency=normal --icon=audio-volume-low --replace=14062003 "MPD Control" "Volume decreased \nCurent Volume: $volume"
end

function music_info
	set -l music_info (mpc | head --lines=1)
	dunstify --urgency=normal --icon=com.deepin.Music --replace=14062003 "MPD Control" "Music Playing: \n$music_info"
end

function mpd_menu
	set -l menu (echo "Stop|Toggle|Next|Previous|Volume-Up|Volume-Down|Info|Clear|Start|Shutdown|Restart" | rofi -sep "|" -dmenu -i -p "MPD-Control" | head --lines 1)
	switch $menu
		case "Stop"
			mpc stop
		case "Toggle"
			mpc toggle
		case "Next"
			mpc next
		case "Previous"
			mpc prev
		case "Volume-Up"
			mpc volume +2
		case "Volume-Down"
			mpc volume -2
		case "Info"
			music_info
		case "Clear"
			mpc clear
		case "Start"
			mpd
		case "Shutdown"
			mpd_shutdown
		case "Restart"
			mpd_shutdown
			mpd
	end
end

function mpd_shutdown
	mpc clear
	mpc volume 50
	mpd --kill
end


function mpd_help
	echo "Usage: mpd-control [COMMAND or OPTION]"
	echo "Options:"
	echo "   -h, --help"
	echo "       Display Help"
	echo "Commands:"
	echo "   stop"
	echo "       Stop the music currently playing"
	echo "   toggle"
	echo "       Toggle the music (Playing/Paused)"
	echo "   next"
	echo "       Play next music in the playlist"
	echo "   prev"
	echo "       Play previous music in the playlist"
	echo "   volume-up"
	echo "       Increase volume by 2"
	echo "   volume-down"
	echo "       Decrease volume by 2"
	echo "   info"
	echo "       Send a notification displaying the information of the"
	echo "       music currently playing"
	echo "   menu"
	echo "       Display a rofi menu to control mpd"
	echo "   shutodwn"
	echo "       Stop the the current iteration of mpd running and"
	echo "       clear the playlist"
	echo "   start"
	echo "       Start mpd"
	echo "   restart"
	echo "       Restart mpd "
	echo "   help"
	echo "       Display Help"
	echo ""
	exit 0
end


if [ -z $argv ]
	echo "Missing options!"
        echo "(run mpd-control -h for help)"
	exit 1
else if [ -n $argv  ]
	switch $argv
	case "-h"
		mpd_help
	case "--help"
		mpd_help
	case "stop"
	mpc stop
		dunstify --urgency=normal --icon=player_stop --replace=14062003 "MPD Control" "Music Stopped !"
	case "toggle"
		mpc toggle
		check_toggle
	case "next"
		mpc next
		dunstify --urgency=normal --icon=player_fwd --replace=14062003 "MPD Control" "Next Music !"
	case "prev"
		mpc prev
		dunstify --urgency=normal --icon=player_rew --replace=14062003 "MPD Control" "Previous Music !"
	case "volume-up"
		mpc volume +2
		volume-up
	case "volume-down"
		mpc volume -2
		volume-down
	case "info"
		music_info
	case "menu"
		mpd_menu
	case "shutdown"
		mpd_shutdown
	case "start"
		mpd
	case "restart"
		mpd_shutdown
		mpd
	case "help"
		mpd_help
	case 0
		echo "run mpd-control -h for help"
		exit 1
	case '*'
		echo "Unknown Command"
		echo "run mpd-control -h for help"
		exit 1
	end
end

